diff -up libtirpc-0.2.4/src/svc_vc.c.orig libtirpc-0.2.4/src/svc_vc.c
--- libtirpc-0.2.4/src/svc_vc.c.orig	2018-12-17 10:54:46.174307476 -0500
+++ libtirpc-0.2.4/src/svc_vc.c	2018-12-17 11:00:53.841166947 -0500
@@ -494,9 +494,14 @@ read_vc(xprtp, buf, len)
 	cfp = (struct cf_conn *)xprt->xp_p1;
 
 	if (cfp->nonblock) {
+		/* Since len == 0 is returned on zero length
+		 * read or EOF errno needs to be reset before
+		 * the read
+		 */
+		errno = 0;
 		len = read(sock, buf, (size_t)len);
 		if (len < 0) {
-			if (errno == EAGAIN)
+			if (errno == EAGAIN || errno == EWOULDBLOCK)
 				len = 0;
 			else
 				goto fatal_err;
diff -up libtirpc-0.2.4/src/xdr_rec.c.orig libtirpc-0.2.4/src/xdr_rec.c
--- libtirpc-0.2.4/src/xdr_rec.c.orig	2013-12-09 15:59:51.000000000 -0500
+++ libtirpc-0.2.4/src/xdr_rec.c	2018-12-17 11:00:53.842166963 -0500
@@ -63,6 +63,7 @@
 #include <rpc/svc.h>
 #include <rpc/clnt.h>
 #include <stddef.h>
+#include <errno.h>
 #include "rpc_com.h"
 static bool_t	xdrrec_getlong(XDR *, long *);
 static bool_t	xdrrec_putlong(XDR *, const long *);
@@ -539,7 +540,13 @@ __xdrrec_getrec(xdrs, statp, expectdata)
 		n = rstrm->readit(rstrm->tcp_handle, rstrm->in_hdrp,
 		    (int)sizeof (rstrm->in_header) - rstrm->in_hdrlen);
 		if (n == 0) {
-			*statp = expectdata ? XPRT_DIED : XPRT_IDLE;
+			/* EAGAIN or EWOULDBLOCK means a zero length
+			 * read not an EOF.
+			 */
+			if (errno == EAGAIN || errno == EWOULDBLOCK)
+				*statp = XPRT_IDLE;
+			else
+				*statp = expectdata ? XPRT_DIED : XPRT_IDLE;
 			return FALSE;
 		}
 		if (n < 0) {
@@ -566,6 +573,7 @@ __xdrrec_getrec(xdrs, statp, expectdata)
 			rstrm->in_header &= ~LAST_FRAG;
 			rstrm->last_frag = TRUE;
 		}
+		rstrm->in_haveheader = 1;
 	}
 
 	n =  rstrm->readit(rstrm->tcp_handle,
@@ -578,7 +586,13 @@ __xdrrec_getrec(xdrs, statp, expectdata)
 	}
 
 	if (n == 0) {
-		*statp = expectdata ? XPRT_DIED : XPRT_IDLE;
+		/* EAGAIN or EWOULDBLOCK means a zero length
+		 * read not an EOF.
+		 */
+		if (errno == EAGAIN || errno == EWOULDBLOCK)
+			*statp = XPRT_IDLE;
+		else
+			*statp = expectdata ? XPRT_DIED : XPRT_IDLE;
 		return FALSE;
 	}
 
