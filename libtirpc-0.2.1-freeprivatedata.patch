diff -up libtirpc-0.2.1/src/auth_gss.c.orig libtirpc-0.2.1/src/auth_gss.c
--- libtirpc-0.2.1/src/auth_gss.c.orig	2014-04-09 13:20:36.600259000 -0400
+++ libtirpc-0.2.1/src/auth_gss.c	2014-04-09 14:24:39.308988000 -0400
@@ -262,6 +262,32 @@ authgss_get_private_data(AUTH *auth, str
 	pd->pd_ctx = gd->ctx;
 	pd->pd_ctx_hndl = gd->gc.gc_ctx;
 	pd->pd_seq_win = gd->win;
+	/*
+	 * We've given this away -- don't try to use it ourself any more
+	 * Caller should call authgss_free_private_data to free data.
+	 * This also ensures that authgss_destroy_context() won't try to
+	 * send an RPCSEC_GSS_DESTROY request which might inappropriately
+	 * destroy the context.
+	 */
+	gd->gc.gc_ctx.length = 0;
+	gd->gc.gc_ctx.value = NULL;
+
+	return (TRUE);
+}
+
+bool_t
+authgss_free_private_data(struct authgss_private_data *pd)
+{
+	OM_uint32	min_stat;
+	log_debug("in authgss_free_private_data()");
+
+	if (!pd)
+		return (FALSE);
+
+	pd->pd_ctx = NULL;
+	gss_release_buffer(&min_stat, &pd->pd_ctx_hndl);
+	memset(&pd->pd_ctx_hndl, 0, sizeof(pd->pd_ctx_hndl));
+	pd->pd_seq_win = 0;
 
 	return (TRUE);
 }
diff -up libtirpc-0.2.1/tirpc/rpc/auth_gss.h.orig libtirpc-0.2.1/tirpc/rpc/auth_gss.h
--- libtirpc-0.2.1/tirpc/rpc/auth_gss.h.orig	2009-11-30 09:04:55.000000000 -0500
+++ libtirpc-0.2.1/tirpc/rpc/auth_gss.h	2014-04-09 14:15:50.148332000 -0400
@@ -119,6 +119,7 @@ AUTH   *authgss_create_default	__P((CLIE
 bool_t authgss_service		__P((AUTH *auth, int svc));
 bool_t authgss_get_private_data	__P((AUTH *auth,
 	    			     struct authgss_private_data *));
+bool_t authgss_free_private_data __P((struct authgss_private_data *));
 
 void	log_debug		__P((const char *fmt, ...));
 void	log_status		__P((char *m, OM_uint32 major,
